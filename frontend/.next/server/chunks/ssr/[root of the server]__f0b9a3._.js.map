{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///Users/raaj/Documents/CS/madhelp/frontend/src/app/LandingPage.tsx"],"sourcesContent":["// src/pages/AuthTabs.tsx\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function AuthTabs() {\n  const [activeTab, setActiveTab] = useState<\"signup\" | \"login\">(\"signup\");\n\n  return (\n    <div className=\"flex min-h-screen items-center justify-center bg-gray-100 p-6\">\n      <div className=\"w-full max-w-lg rounded-lg bg-white p-6 shadow-md\">\n        {/* Tabs Header */}\n        <div className=\"mb-6 flex justify-center gap-4\">\n          <button\n            onClick={() => setActiveTab(\"signup\")}\n            className={`px-6 py-2 text-lg font-medium rounded-lg ${\n              activeTab === \"signup\"\n                ? \"bg-green-600 text-white\"\n                : \"bg-gray-200 text-gray-800 hover:bg-gray-300\"\n            }`}\n          >\n            Sign Up\n          </button>\n          <button\n            onClick={() => setActiveTab(\"login\")}\n            className={`px-6 py-2 text-lg font-medium rounded-lg ${\n              activeTab === \"login\"\n                ? \"bg-blue-600 text-white\"\n                : \"bg-gray-200 text-gray-800 hover:bg-gray-300\"\n            }`}\n          >\n            Login\n          </button>\n        </div>\n\n        {/* Tab Content */}\n        {activeTab === \"signup\" ? <SignUpSection /> : <LoginSection />}\n      </div>\n    </div>\n  );\n}\n\n/* Sign Up Section */\nfunction SignUpSection() {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirm_password: \"\",\n  });\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n\n    if (formData.password !== formData.confirm_password) {\n      setError(\"Passwords do not match.\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\n        \"http://127.0.0.1:8000/api/users/signup\",\n        {\n          username: formData.username,\n          email: formData.email,\n          password: formData.password,\n        }\n      );\n      setSuccess(\"Sign-up successful! You can now log in.\");\n      setFormData({\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirm_password: \"\",\n      });\n    } catch (err: any) {\n      setError(err.response?.data?.detail || \"An unexpected error occurred.\");\n    }\n  };\n\n  return (\n    <div>\n      <h2 className=\"mb-6 text-center text-2xl font-bold text-gray-800\">\n        Sign Up\n      </h2>\n      {error && (\n        <div className=\"mb-4 rounded bg-red-100 p-3 text-red-700\">{error}</div>\n      )}\n      {success && (\n        <div className=\"mb-4 rounded bg-green-100 p-3 text-green-700\">\n          {success}\n        </div>\n      )}\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700\">\n            Username\n          </label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={formData.username}\n            onChange={handleChange}\n            required\n            className=\"mt-1 w-full rounded border border-gray-300 p-2 text-gray-800 focus:ring-2 focus:ring-green-600\"\n          />\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700\">\n            Email\n          </label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            required\n            className=\"mt-1 w-full rounded border border-gray-300 p-2 text-gray-800 focus:ring-2 focus:ring-green-600\"\n          />\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            required\n            className=\"mt-1 w-full rounded border border-gray-300 p-2 text-gray-800 focus:ring-2 focus:ring-green-600\"\n          />\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700\">\n            Confirm Password\n          </label>\n          <input\n            type=\"password\"\n            name=\"confirm_password\"\n            value={formData.confirm_password}\n            onChange={handleChange}\n            required\n            className=\"mt-1 w-full rounded border border-gray-300 p-2 text-gray-800 focus:ring-2 focus:ring-green-600\"\n          />\n        </div>\n        <button\n          type=\"submit\"\n          className=\"w-full rounded-lg bg-green-600 py-2 text-lg font-medium text-white hover:bg-green-700\"\n        >\n          Sign Up\n        </button>\n      </form>\n    </div>\n  );\n}\n\n/* Login Section */\nfunction LoginSection() {\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData((prev) => ({ ...prev, [e.target.name]: e.target.value }));\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(\"\");\n    setSuccess(\"\");\n\n    try {\n      const response = await axios.post(\n        \"http://127.0.0.1:8000/api/users/login\",\n        {\n          email: formData.email,\n          password: formData.password,\n        }\n      );\n      const { access_token } = response.data;\n      sessionStorage.setItem(\"access_token\", access_token);\n      setSuccess(\"Login successful!\");\n      // Optionally redirect: window.location.href = \"/dashboard\";\n    } catch (err: any) {\n      setError(err.response?.data?.detail || \"An unexpected error occurred.\");\n    }\n  };\n\n  return (\n    <div>\n      <h2 className=\"mb-6 text-center text-2xl font-bold text-gray-800\">\n        Login\n      </h2>\n      {error && (\n        <div className=\"mb-4 rounded bg-red-100 p-3 text-red-700\">{error}</div>\n      )}\n      {success && (\n        <div className=\"mb-4 rounded bg-green-100 p-3 text-green-700\">\n          {success}\n        </div>\n      )}\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700\">\n            Email\n          </label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            required\n            className=\"mt-1 w-full rounded border border-gray-300 p-2 text-gray-800 focus:ring-2 focus:ring-blue-600\"\n          />\n        </div>\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700\">\n            Password\n          </label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            required\n            className=\"mt-1 w-full rounded border border-gray-300 p-2 text-gray-800 focus:ring-2 focus:ring-blue-600\"\n          />\n        </div>\n        <button\n          type=\"submit\"\n          className=\"w-full rounded-lg bg-blue-600 py-2 text-lg font-medium text-white hover:bg-blue-700\"\n        >\n          Login\n        </button>\n      </form>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 500, "column": 0}, "map": {"version":3,"sources":["file:///Users/raaj/Documents/CS/madhelp/frontend/src/app/page.tsx"],"sourcesContent":["import LandingPage from \"./LandingPage\"; // Import the Landing Page component\n\nexport default function Home() {\n  return <LandingPage />;\n}\n"],"names":[],"mappings":";;;;AAAA,mNAAyC,oCAAoC;;;AAE9D,SAAS;IACtB,qBAAO,8OAAC,0HAAA,CAAA,UAAW;;;;;AACrB"}},
    {"offset": {"line": 514, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 525, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 525, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}